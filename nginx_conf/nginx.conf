user root;
#worker processes
worker_processes 1;

#global error log
error_log logs/error.log error;

events {
	#worker connections current 1024
	worker_connections 1024;
} 


http {
	#include mime type
	include mime.types;

	#definition default type
	default_type application/octet-stream;

	#definition main log format
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	#enable sendfile server
	sendfile on;

        #keepalive connection timeoutt 65
	keepalive_timeout 65;

        #enable gzip
	gzip on;

	#include http config
	proxy_temp_path /storage/nginx/agile/proxy_temp;
	proxy_cache_path /storage/agile/agile/cache levels=1:2 keys_zone=agile:50m inactive=1d max_size=500m;

	server {
        	listen   $NGINX_PORT;

	        #charset koi8-r;
	        #access_log logs/fastdfs.log main;

  		#client max body size
	        client_max_body_size 1g;

  
        	gzip  on;
	        gzip_min_length 32k;
        	gzip_types *;
	        gzip_proxied any;
        	gzip_vary on;
	        gzip_disable "MSIE [1-6].";

        	location /image/{
	           rewrite "^/image/([a-zA-Z\d]{2}){1}([a-zA-Z\d]{2}){1}([\w\.-]{3,})$" /M00/$1/$2/$3 last;
        	   rewrite "^/image/(\d{1,4}[xX_-]\d{1,4})/([a-zA-Z\d]{2}){1}([a-zA-Z\d]{2}){1}([\w\.-]{3,})$" /M00/$1/$2/$3/$4 last;
	        }

		location ~ /M00/(\d+)[xX_-](\d+)/(.+){
 			     proxy_cache agile;
	 		     proxy_cache_valid 200 304 1d;
		     	     proxy_ignore_headers Cache-Control;
                	     proxy_cache_key $uri;
		    	     proxy_pass http://127.0.0.1:$NGINX_PORT/M00/$3;
			     image_filter resize  $1 $2;
	        	     image_filter_buffer 256M;
		             image_filter_jpeg_quality 100;
        	}

		location /agile/M00 {
    			 proxy_pass http://127.0.0.1:$NGINX_PORT/M00;
 		}

		location /M00/ {
		             proxy_ignore_headers Set-Cookie Cache-Control;
              		     alias   /storage/fastdfs/data;
	             	     ngx_fastdfs_module;
        	}	       
     }

     error_page 404 /404.html;

}
